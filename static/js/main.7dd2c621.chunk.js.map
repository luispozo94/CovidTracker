{"version":3,"sources":["component/AnalyticsChart.js","staticData/index.js","component/StatCard.js","component/ListOfStats.js","component/Navbar.js","App.js","index.js"],"names":["AnalyticsChart","useEffect","canvas","document","getElementById","getContext","window","myLine","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","options","maintainAspectRatio","responsive","title","text","display","fontSize","fontColor","legend","align","position","scales","xAxes","ticks","yAxes","callback","tick","index","array","gridLines","borderDash","borderDashOffset","color","zeroLineColor","className","id","report","cases","value","death","labelColor","StatCard","stat","ListOfStats","map","Navbar","App","style","minHeight","ReactDOM","render"],"mappings":"0LA0FeA,EAvFQ,WAgFtB,OA9EAC,qBAAU,WAET,IAAMC,EAASC,SAASC,eAAe,SAASC,WAAW,MAC3DC,OAAOC,OAAS,IAAIC,QAAMN,EAAQ,CACjCO,KAAM,MACNC,KAAM,CACLC,OAAQ,CAAC,cAAe,cAAe,cAAe,cAAe,eACrEC,SAAU,CACT,CACCC,MAAO,QACPH,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBI,gBAAiB,UACjBC,YAAa,WAEd,CACCF,MAAO,SACPH,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACnBI,gBAAiB,UACjBC,YAAa,WAEd,CACCF,MAAO,YACPH,KAAM,CAAC,EAAG,EAAG,EAAG,GAAI,GACpBI,gBAAiB,UACjBC,YAAa,aAIhBC,QAAS,CACRC,qBAAqB,EACrBC,YAAY,EAEZC,MAAO,CACNC,KAAM,cACNC,SAAS,EACTC,SAAU,KACVC,UAAW,SAEZC,OAAQ,CACPC,MAAO,MACPC,SAAU,MACVf,OAAQ,CACPY,UAAW,UAIbI,OAAQ,CACPC,MAAO,CACN,CACCC,MAAO,CACNN,UAAW,WAKdO,MAAO,CACN,CACCD,MAAO,CACNN,UAAW,QACXQ,SAAU,SAACC,EAAMC,EAAOC,GAEvB,OAAOD,EAAQ,IAAM,EAAID,EAAO,KAIlCG,UAAW,CACVC,WAAY,CAAC,GACbC,iBAAkB,CAAC,IACnBC,MAAO,wBACPC,cAAe,iCAOnB,IAGF,qBAAKC,UAAU,sEAAf,SACC,wBAAQC,GAAG,QAAQD,UAAU,YCnF1BE,EAAS,CACdC,MAAO,CACN,CACC9B,MAAO,cACP+B,MAAO,MAER,CACC/B,MAAO,SACP+B,MAAO,KACPC,MAAO,IAER,CACChC,MAAO,QACP+B,MAAO,EACPC,MAAO,GAER,CACChC,MAAO,YACP+B,MAAO,IACPC,MAAO,MAOJC,EAAa,CAAC,kBAAmB,iBAAkB,eAAgB,iBCT1DC,EAjBE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMF,EAAiB,EAAjBA,WACjBjC,EAAwBmC,EAAxBnC,MAAO+B,EAAiBI,EAAjBJ,MAAOC,EAAUG,EAAVH,MAGtB,OACC,qBAAKL,UAAU,6HAAf,SACC,gCACC,oBAAIA,UAAU,qBAAd,SAAoC3B,IACpC,sBAAK2B,UAAS,4BAAuBM,GAArC,UACC,oBAAIN,UAAU,sBAAd,SAAqCI,IACrC,oBAAIJ,UAAU,eAAd,SAA8BK,EAAQ,IAAMA,EAAQ,cCG1CI,EAVK,WACnB,OACC,qBAAKT,UAAU,qDAAf,SACEE,EAAOC,MAAMO,KAAI,SAACF,EAAMf,GACxB,OAAO,cAAC,EAAD,CAAUe,KAAMA,EAAkBF,WAAYA,EAAWb,IAA9BA,SCEvBkB,EATA,WACd,OACC,sBAAKX,UAAU,wBAAf,UACC,oBAAIA,UAAU,iCAAd,gCACA,oBAAIA,UAAU,wBAAd,kDCiBYY,EAjBH,WACX,OACC,sBAAKZ,UAAU,4CAAf,UACC,cAAC,EAAD,IACA,sBACCA,UAAU,qEACVa,MAAO,CACNC,UAAW,QAHb,UAMC,cAAC,EAAD,IACA,cAAC,EAAD,W,MCZJC,IAASC,OAAO,cAAC,EAAD,IAASrD,SAASC,eAAe,W","file":"static/js/main.7dd2c621.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Chart } from 'chart.js';\n\nconst AnalyticsChart = () => {\n\t//use Effect is waiting chart.js to change and it will for a re-render\n\tuseEffect(() => {\n\t\t//chart.js boiler plate also you can passed in any API calls\n\t\tconst canvas = document.getElementById('chart').getContext('2d');\n\t\twindow.myLine = new Chart(canvas, {\n\t\t\ttype: 'bar',\n\t\t\tdata: {//passing the static data of the months \n\t\t\t\tlabels: ['November 14', 'November 15', 'November 16', 'November 17', 'November 18'],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Death',\n\t\t\t\t\t\tdata: [0, 5, 2, 0, 3],//data will assing its values to the array of static data\n\t\t\t\t\t\tbackgroundColor: '#f87171',\n\t\t\t\t\t\tborderColor: '#f87171',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Active',\n\t\t\t\t\t\tdata: [7, 5, 3, 5, 3],\n\t\t\t\t\t\tbackgroundColor: '#6ee7b7',\n\t\t\t\t\t\tborderColor: '#6ee7b7',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'Recovered',\n\t\t\t\t\t\tdata: [0, 5, 7, 10, 0],\n\t\t\t\t\t\tbackgroundColor: '#93c5fd',\n\t\t\t\t\t\tborderColor: '#93c5fd',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tresponsive: true,\n        //adding a header to the top of the chart\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Covid Chart',\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\tfontSize: '20',\n\t\t\t\t\tfontColor: 'white',\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\talign: 'end',\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\tlabels: {\n\t\t\t\t\t\tfontColor: 'white',\n\t\t\t\t\t},\n\t\t\t\t},\n        //adding color to the months \n\t\t\t\tscales: {\n\t\t\t\t\txAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tfontColor: 'white',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n          //adding color to the numbers\n\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tfontColor: 'white',\n\t\t\t\t\t\t\t\tcallback: (tick, index, array) => {\n\t\t\t\t\t\t\t\t\t//added logic to only show odd numbers\n\t\t\t\t\t\t\t\t\treturn index % 2 === 0 ? tick : '';\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t//added dash line to the chart\n\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\tborderDash: [3],\n\t\t\t\t\t\t\t\tborderDashOffset: [10],\n\t\t\t\t\t\t\t\tcolor: 'rgba(255,255,255,0.3)',\n\t\t\t\t\t\t\t\tzeroLineColor: 'rgba(255,255,255,0.3)',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"w-11/12 xl:w-6/12 2xl:w-8/12 bg-gray-900 sm:ml-2 mt-10 xl:mt-0 h-96\">\n\t\t\t<canvas id=\"chart\" className=\"h-96\" />\n\t\t</div>\n\t);\n};\n\nexport default AnalyticsChart;\n","//static data \n\nconst report = {\n\tcases: [\n\t\t{\n\t\t\tlabel: 'Total Cases',\n\t\t\tvalue: 1220,\n\t\t},\n\t\t{\n\t\t\tlabel: 'active',\n\t\t\tvalue: 1100,\n\t\t\tdeath: 78,\n\t\t},\n\t\t{\n\t\t\tlabel: 'Death',\n\t\t\tvalue: 4,\n\t\t\tdeath: 1,\n\t\t},\n\t\t{\n\t\t\tlabel: 'Recovered',\n\t\t\tvalue: 100,\n\t\t\tdeath: 20,\n\t\t},\n\t],\n};\n \n\n\nconst labelColor = ['text-yellow-300', 'text-green-300', 'text-red-400', 'text-blue-300'];\n\nexport { labelColor, report };\n","import React from 'react'\n\nconst StatCard = ({ stat, labelColor }) => {\n\tconst { label, value, death } = stat; //passing values from destructure label stat\n\n\t//if there is a death add the death amount to it\n\treturn (\n\t\t<div className=\"h-28 sm:w-56 sm:h-48 w-full  bg-indigo-600 rounded flex items-center p-5 hover:tracking-wide transition-all cursor-pointer\">\n\t\t\t<div>\n\t\t\t\t<h3 className=\"text-white text-sm\">{label}</h3>\n\t\t\t\t<div className={`flex items-center ${labelColor}`}>\n\t\t\t\t\t<h1 className=\"text-3xl font-black\">{value}</h1>\n\t\t\t\t\t<h3 className=\"ml-2 text-sm\">{death ? '+' + death : ''}</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default StatCard\n","import React from 'react';\nimport { report, labelColor } from '../staticData';\nimport StatCard from './StatCard';\n\n//this functional component will loop over the array of stats\nconst ListOfStats = () => {\n\treturn (\n\t\t<div className=\"w-11/12 sm:w-auto mt-10 grid  sm:grid-cols-2 gap-2\">\n\t\t\t{report.cases.map((stat, index) => {\n\t\t\t\treturn <StatCard stat={stat} key={index} labelColor={labelColor[index]} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default ListOfStats;\n","import React from 'react';\n//navbar\nconst Navbar = () => {\n\treturn (\n\t\t<div className=\"w-11/12 mx-auto pt-10\">\n\t\t\t<h1 className=\"text-3xl font-black text-white\"> Covid-19 Tracker </h1>\n\t\t\t<h3 className=\"text-gray-400 text-sm\"> Latest update December 14 2021 </h3>\n\t\t</div>\n\t);\n};\n\nexport default Navbar;\n","import React from 'react';\nimport AnalyticsChart from './component/AnalyticsChart'\nimport ListOfStats from './component/ListOfStats'\nimport Navbar from './component/Navbar'\n\n//app is lifting the stats,chart and navbar state \nconst App = () => {\n\treturn (\n\t\t<div className=\"font-inter bg-gray-900 min-h-screen pb-36\">\n\t\t\t<Navbar />\n\t\t\t<div\n\t\t\t\tclassName=\"w-full flex items-center justify-center flex-col xl:flex-row mt-20\"\n\t\t\t\tstyle={{\n\t\t\t\t\tminHeight: '70vh',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<ListOfStats />\n\t\t\t\t<AnalyticsChart />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.css'//importing to globally add tailwindcss\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}